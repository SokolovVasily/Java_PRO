Уровень сложности 5 из 10:
Найти сумму всех элементов ArrayList<Integer>.(2)
Найти среднее значение элементов LinkedList<Integer>.(3)
Перебрать ArrayList<String> и вывести все элементы на экран.[19]
Перебрать LinkedList<String> и найти самую длинную строку.[20]
Создать ArrayList с объектами вашего собственного класса и вывести их на экран.(1)

Уровень сложности 6 из 10:
Перебрать ArrayList<Integer> и найти наименьший элемент.(4)
Перебрать LinkedList<Integer> и найти наибольший элемент.(5)
Перебрать ArrayList<String> и найти количество элементов, начинающихся с определенной буквы.[21]
Перебрать LinkedList<String> и найти первое вхождение определенной строки.[22]
Создать LinkedList с объектами вашего собственного класса и удалить все элементы, удовл опред условию.(6)

Уровень сложности 7 из 10:
Перебрать ArrayList<Integer> и удалить все четные числа.(7)
Перебрать LinkedList<Integer> и заменить все элементы, кратные 3, на нули.(8)
Перебрать ArrayList<String> и объединить все элементы в одну строку.[23]
Перебрать LinkedList<String> и удалить все элементы, содержащие определенную подстроку.[24]
Создать ArrayList с объектами вашего собст класса и вывести только те, которые удовл опред условию.(9)

Уровень сложности 8 из 10:
Перебрать ArrayList<Integer> и найти сумму квадратов всех элементов.(10)
Перебрать LinkedList<Integer> и вычислить произведение всех элементов.(11)
Перебрать ArrayList<String> и найти самую короткую строку.[25]
Перебрать LinkedList<String> и заменить все гласные буквы в каждой строке на символ '*'.[26]
Создать LinkedList с объектами вашего собственного класса и отсортировать их в порядке убывания.(12)

Уровень сложности 9 из 10:
Перебрать ArrayList<Integer> и найти второй по величине элемент.(13)
Перебрать LinkedList<Integer> и вывести все элементы в обратном порядке.(14)
Перебрать ArrayList<String> и вывести все строки, содержащие только буквы.[27]
Перебрать LinkedList<String> и найти самую длинную строку, не содержащую пробелов.[28]
Создать ArrayList с объектами вашего собственного класса и отфильтровать только уникальные элементы.(15)

Уровень сложности 10 из 10:
Перебрать ArrayList<Integer> и найти наибольшую возрастающую последовательность элементов.(16)
Перебрать LinkedList<Integer> и удалить все дубликаты элементов.(17)
Перебрать ArrayList<String> и создать новый список, содержащий только уникальные строки.[29]
Перебрать LinkedList<String> и объединить все строки в одну с использованием разделителя.[30]
Создать LinkedList с объектами вашего собственного класса и отсортировать их по нескольким критериям.(18)



новая тема

1.
Переберите все ключи и значения в HashMap и TreeMap и выведите их на экран.
Переберите только ключи в HashMap и TreeMap и найдите сумму их длин.
Переберите только значения в HashMap и TreeMap и найдите их среднее значение.
Переберите HashMap и найдите ключ с максимальным значением.
Переберите TreeMap и найдите ключ с минимальным значением.
Переберите HashMap и удалите все элементы с четными значениями.
Переберите TreeMap и удалите все элементы с ключами, начинающимися с буквы 'A'.
Переберите TreeMap и найдите наибольший ключ, который меньше или равен заданному ключу.
**Переберите HashMap и найдите ключ с максимальной суммой значений в его вложенных HashMap: HashMap<String, HashMap<String, Integer>> nestedHashMap = new HashMap<>();

 2.

  Класс состоящий мз 4 полей разного типа
- Создать 10 объектов класса
- Поместить все с Хэш СЕт и вывести на экран
- Создайте TreeSet и найдите наименьший и наибольший элементы (int) в нем, перебирая элементы внутри набора.
- Напишите метод, который принимает Set и находит все объекты, содержащие определенную подстроку(из поля стринг), перебирая элементы и используя метод contains.
- Напишите метод, которая удаляет все четные инт из HashSet и выводит оставшиеся элементы. Используйте итератор.
- Создайте метод, который принимает два HashSet<Наш Класс> и возвращает новый HashSet, содержащий элементы, которые присутствуют в обоих множествах
